{"version":3,"sources":["webpack:///./frontend/components/pages/likes/likes_list.jsx","webpack:///./frontend/components/pages/likes/likes_list_container.js","webpack:///./frontend/components/sidebar/guild_recs.jsx"],"names":["LikesList","props","fetchAllQuests","fetchAllLikes","prevProps","quests","likes","currentUser","questList","randomQuest","likedIds","map","like","quest_id","forEach","quest","idx","i","length","user_id","id","push","reverse","x","includes","React","Component","mapStateToProps","state","session","Object","values","entities","mapDispatchToProps","dispatch","connect","GuildRecs","startRecs","toggleFollowed","bind","cycleGuilds","fetchAllUsers","follows","fetchAllFollows","e","followed","userId","preventDefault","unfollowUser","followUser","nextIdx","users","setState","currentLocation","followRecs","followIds","follow","followRecCreate","user","notFollowed","avatarUrl","avatar","username","guild_name","newFollowRec","startIdx","slice","title","bottomButton","ownProps","location","pathname","withRouter"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import React from \"react\";\nimport QuestContainer from '../../quests/quest_container';\nimport GuildRecs from '../../sidebar/guild_recs';\n\nclass LikesList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllQuests();\n    this.props.fetchAllLikes();\n  }\n\n  componentDidUpdate(prevProps){\n    // if (this.props.quests.length !== prevProps.quests.length){\n    // \tthis.props.fetchAllQuests();\n    // }\n  }\n\n  render() {\n    const { quests, likes, currentUser } = this.props;\n    let questList = [];\n    let randomQuest;\n    let likedIds = likes.map((like) => like.quest_id);\n\n    quests.forEach((quest, idx) => {\n      for (let i = 0; i < likes.length; i++) {\n        let like = likes[i];\n        if (like.user_id === currentUser.id && like.quest_id === quest.id) {\n          questList.push(\n            <QuestContainer key={idx} quest={quest} loc={'dash'} />\n          );\n          break;\n        }\n      }\n    });\n    questList = questList.reverse();\n\n    for (let x = 0; x < quests.length; x++) {\n      let quest = quests[x];\n      if (!likedIds.includes(quest.id) && quest.user_id !== currentUser.id) {\n        randomQuest = <QuestContainer quest={quest} loc={'dash-random'} />;\n      }\n    }\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"dashboard-left\">\n          <div className=\"dashboard-header\">\n            <h1 className=\"dash-title\">{likes.length} Likes</h1>\n          </div>\n          {questList}\n        </div>\n        <div className=\"dashboard-right\">\n          <GuildRecs />\n          <div className=\"suggested-recommendation\">\n            <div className=\"suggested-title\">Sanctioned Job</div>\n            {randomQuest}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LikesList;\n","import { connect } from 'react-redux';\nimport LikesList from './likes_list';\n// import { openModal } from '../../../actions/modal_actions';\nimport { fetchAllQuests } from '../../../actions/quest_actions';\n// import { fetchAllFollows } from '../../../actions/follow_actions';\nimport { fetchAllLikes } from '../../../actions/like_actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.session.currentUser,\n    quests: Object.values(state.entities.quests),\n    likes: Object.values(state.entities.likes),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllQuests: () => dispatch(fetchAllQuests()),\n  fetchAllLikes: () => dispatch(fetchAllLikes()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LikesList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { fetchAllUsers } from '../../actions/user_actions';\nimport {\n  fetchAllFollows,\n  followUser,\n  unfollowUser,\n} from '../../actions/follow_actions';\n\nclass GuildRecs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startRecs: 0,\n    };\n    this.toggleFollowed = this.toggleFollowed.bind(this);\n    this.cycleGuilds = this.cycleGuilds.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.follows.length != prevProps.follows.length) {\n      this.props.fetchAllFollows();\n    }\n  }\n  toggleFollowed(e, followed, userId) {\n    e.preventDefault();\n    if (followed) {\n      this.props.unfollowUser(userId);\n    } else {\n      this.props.followUser(userId);\n    }\n  }\n\n  cycleGuilds() {\n    let nextIdx;\n    if (this.state.startRecs + 4 > this.props.users.length - 1) {\n      nextIdx = 0;\n    } else {\n      nextIdx = this.state.startRecs + 4;\n    }\n    this.setState({ startRecs: nextIdx });\n  }\n\n  render() {\n    const { currentUser, currentLocation, follows, users } = this.props;\n    let followRecs = [];\n    const followIds = follows.map((follow) => follow.user_id);\n\n    const followRecCreate = (user) => {\n      let notFollowed = !followIds.includes(user.id);\n      return (\n        <li className=\"suggested-guild-content-container\" key={user.id}>\n          <div className=\"user-attributes\">\n            <img src={user.avatarUrl || user.avatar} className=\"guild-rec-avatar\" />\n            <div className=\"guild-rec-details\">\n              <span className=\"guild-rec-username\">{user.username}</span>\n              <span className=\"guild-rec-guildname\">\n                {user.guild_name || user.username}\n              </span>\n            </div>\n          </div>\n          <div className=\"follow-rec-button-container\">\n            <div\n              onClick={(e) => this.toggleFollowed(e, !notFollowed, user.id)}\n              className={`${\n                notFollowed ? 'un' : ''\n              }follow-button follow-rec-button`}\n            >\n              {notFollowed ? 'Follow' : 'Unfollow'}\n            </div>\n          </div>\n        </li>\n      );\n    };\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n      if (user.id !== currentUser.id && !followIds.includes(user.id)) {\n        const newFollowRec = followRecCreate(user);\n        followRecs.push(newFollowRec);\n      }\n    }\n    if (currentLocation !== '/dashboard') {\n      const startIdx = this.state.startRecs;\n      followRecs = followRecs.slice(startIdx, startIdx + 4);\n    } else {\n      followRecs = followRecs.slice(0, 4);\n    }\n    const title =\n      currentLocation !== '/dashboard' ? (\n        <div className=\"suggested-guilds-title\">Suggested Guilds</div>\n      ) : (\n        <h1 className=\"suggested-guilds-title\">Check out these guilds</h1>\n      );\n    const bottomButton =\n      currentLocation !== '/dashboard' ? (\n        <div className=\"suggested-guilds-button\" onClick={this.cycleGuilds}>\n          Show More Guilds\n        </div>\n      ) : (\n        <Link to=\"/explore\" className=\"suggested-guilds-explore-link\">\n          <span className=\"explore-text\">Explore all of Adventr</span>\n        </Link>\n      );\n    return (\n      <div className=\"suggested-guilds\">\n        {title}\n        <ul className=\"suggested-guilds-container\">{followRecs}</ul>\n        {bottomButton}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: state.session.currentUser,\n    currentLocation: ownProps.location.pathname,\n    follows: Object.values(state.entities.follows),\n    users: Object.values(state.entities.users),\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    fetchAllUsers: () => dispatch(fetchAllUsers()),\n    fetchAllFollows: () => dispatch(fetchAllFollows()),\n    followUser: (userId) => dispatch(followUser(userId)),\n    unfollowUser: (userId) => dispatch(unfollowUser(userId)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GuildRecs)\n);\n"],"sourceRoot":""}