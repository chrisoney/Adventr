{"version":3,"sources":["webpack:///./frontend/components/pages/follows/follows_list.jsx","webpack:///./frontend/components/pages/follows/follows_list_container.js","webpack:///./frontend/components/sidebar/guild_recs.jsx"],"names":["FollowsList","props","toggleFollowed","bind","fetchAllUsers","fetchAllQuests","fetchAllFollows","e","followed","userId","preventDefault","unfollowUser","followUser","that","currentUser","quests","follows","users","followedUsers","randomQuest","followIds","map","follow","user_id","x","length","quest","id","months","latestQuest","user","updatedDates","updated_at","sort","reverse","latest","year","slice","monthNum","parseInt","month","day","createUserContainer","latestDate","notFollowed","includes","avatarUrl","avatar","username","i","followed_users","push","React","Component","mapStateToProps","state","session","Object","values","entities","mapDispatchToProps","dispatch","connect","GuildRecs","startRecs","cycleGuilds","prevProps","nextIdx","setState","currentLocation","followRecs","followRecCreate","guild_name","newFollowRec","startIdx","title","bottomButton","ownProps","location","pathname","withRouter"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import React from 'react';\nimport GuildRecs from '../../sidebar/guild_recs';\nimport QuestContainer from '../../quests/quest_container';\n\nclass FollowsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleFollowed = this.toggleFollowed.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n    this.props.fetchAllQuests();\n    this.props.fetchAllFollows();\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.follows.length !== prevProps.follows.length) {\n  //     this.setState({ follows: this.props.follows });\n  //   }\n  // }\n\n  toggleFollowed(e, followed, userId) {\n    e.preventDefault();\n    if (followed) {\n      this.props.unfollowUser(userId);\n    } else {\n      this.props.followUser(userId);\n    }\n  }\n\n  render() {\n    const that = this;\n    const { currentUser, quests, follows, users } = this.props;\n    const followedUsers = [];\n    let randomQuest;\n    const followIds = follows.map((follow) => follow.user_id);\n\n    for (let x = 0; x < quests.length; x++) {\n      let quest = quests[x];\n      if (quest.user_id !== currentUser.id) {\n        randomQuest = <QuestContainer quest={quest} loc={'dash-random'} />;\n      }\n    }\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sept',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n\n    function latestQuest(user) {\n      const updatedDates = user.quests\n        .map((quest) => quest.updated_at)\n        .sort()\n        .reverse();\n      if (updatedDates.length === 0) return 'This guild has no posts';\n      else {\n        const latest = updatedDates[0];\n        const year = latest.slice(0, 4);\n        const monthNum = parseInt(latest.slice(5, 7), 10);\n        const month = months[monthNum - 1];\n        const day = parseInt(latest.slice(8, 10), 10);\n        return `${month} ${day} ${year}`;\n      }\n    }\n\n    function createUserContainer(user) {\n      const latestDate = latestQuest(user);\n      let notFollowed = !followIds.includes(user.id);\n      return (\n        <div key={user.id} className=\"followed-user-container\">\n          <div className=\"followed-user-left\">\n            <img src={user.avatarUrl || user.avatar} className=\"followed-user-avatar\" />\n            <div className=\"followed-user-details\">\n              <div className=\"followed-user-username\">{user.username}</div>\n              <div className=\"followed-user-latest\">Updated {latestDate}</div>\n            </div>\n          </div>\n          <div className=\"followed-user-right\">\n            <div className=\"follow-button-container\">\n              <div\n                onClick={(e) => that.toggleFollowed(e, !notFollowed, user.id)}\n                className=\"follow-button\"\n              >\n                {notFollowed ? 'Follow' : 'Unfollow'}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      let user = users[i];\n      if (currentUser.followed_users.includes(user.id)) {\n        followedUsers.push(createUserContainer(user));\n      }\n    }\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"dashboard-left\">\n          <div className=\"dashboard-header\">\n            <h1 className=\"dash-title-following\">\n              {followedUsers.length} Following\n            </h1>\n          </div>\n          <div className=\"followed-users-list-container\">{followedUsers}</div>\n        </div>\n        <div className=\"dashboard-right\">\n          <GuildRecs />\n          <div className=\"suggested-recommendation\">\n            <div className=\"suggested-title\">Sanctioned Job</div>\n            {randomQuest}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FollowsList;\n","import { connect } from 'react-redux';\nimport FollowsList from './follows_list';\nimport { fetchAllQuests } from '../../../actions/quest_actions';\nimport { fetchAllUsers } from '../../../actions/user_actions';\nimport {\n  fetchAllFollows,\n  followUser,\n  unfollowUser,\n} from '../../../actions/follow_actions';\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.session.currentUser,\n    quests: Object.values(state.entities.quests),\n    follows: Object.values(state.entities.follows),\n    users: Object.values(state.entities.users),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllQuests: () => dispatch(fetchAllQuests()),\n    fetchAllFollows: () => dispatch(fetchAllFollows()),\n    fetchAllUsers: () => dispatch(fetchAllUsers()),\n    followUser: (userId) => dispatch(followUser(userId)),\n    unfollowUser: (userId) => dispatch(unfollowUser(userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { fetchAllUsers } from '../../actions/user_actions';\nimport {\n  fetchAllFollows,\n  followUser,\n  unfollowUser,\n} from '../../actions/follow_actions';\n\nclass GuildRecs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startRecs: 0,\n    };\n    this.toggleFollowed = this.toggleFollowed.bind(this);\n    this.cycleGuilds = this.cycleGuilds.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.follows.length != prevProps.follows.length) {\n      this.props.fetchAllFollows();\n    }\n  }\n  toggleFollowed(e, followed, userId) {\n    e.preventDefault();\n    if (followed) {\n      this.props.unfollowUser(userId);\n    } else {\n      this.props.followUser(userId);\n    }\n  }\n\n  cycleGuilds() {\n    let nextIdx;\n    if (this.state.startRecs + 4 > this.props.users.length - 1) {\n      nextIdx = 0;\n    } else {\n      nextIdx = this.state.startRecs + 4;\n    }\n    this.setState({ startRecs: nextIdx });\n  }\n\n  render() {\n    const { currentUser, currentLocation, follows, users } = this.props;\n    let followRecs = [];\n    const followIds = follows.map((follow) => follow.user_id);\n\n    const followRecCreate = (user) => {\n      let notFollowed = !followIds.includes(user.id);\n      return (\n        <li className=\"suggested-guild-content-container\" key={user.id}>\n          <div className=\"user-attributes\">\n            <img src={user.avatarUrl || user.avatar} className=\"guild-rec-avatar\" />\n            <div className=\"guild-rec-details\">\n              <span className=\"guild-rec-username\">{user.username}</span>\n              <span className=\"guild-rec-guildname\">\n                {user.guild_name || user.username}\n              </span>\n            </div>\n          </div>\n          <div className=\"follow-rec-button-container\">\n            <div\n              onClick={(e) => this.toggleFollowed(e, !notFollowed, user.id)}\n              className={`${\n                notFollowed ? 'un' : ''\n              }follow-button follow-rec-button`}\n            >\n              {notFollowed ? 'Follow' : 'Unfollow'}\n            </div>\n          </div>\n        </li>\n      );\n    };\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n      if (user.id !== currentUser.id && !followIds.includes(user.id)) {\n        const newFollowRec = followRecCreate(user);\n        followRecs.push(newFollowRec);\n      }\n    }\n    if (currentLocation !== '/dashboard') {\n      const startIdx = this.state.startRecs;\n      followRecs = followRecs.slice(startIdx, startIdx + 4);\n    } else {\n      followRecs = followRecs.slice(0, 4);\n    }\n    const title =\n      currentLocation !== '/dashboard' ? (\n        <div className=\"suggested-guilds-title\">Suggested Guilds</div>\n      ) : (\n        <h1 className=\"suggested-guilds-title\">Check out these guilds</h1>\n      );\n    const bottomButton =\n      currentLocation !== '/dashboard' ? (\n        <div className=\"suggested-guilds-button\" onClick={this.cycleGuilds}>\n          Show More Guilds\n        </div>\n      ) : (\n        <Link to=\"/explore\" className=\"suggested-guilds-explore-link\">\n          <span className=\"explore-text\">Explore all of Adventr</span>\n        </Link>\n      );\n    return (\n      <div className=\"suggested-guilds\">\n        {title}\n        <ul className=\"suggested-guilds-container\">{followRecs}</ul>\n        {bottomButton}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: state.session.currentUser,\n    currentLocation: ownProps.location.pathname,\n    follows: Object.values(state.entities.follows),\n    users: Object.values(state.entities.users),\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    fetchAllUsers: () => dispatch(fetchAllUsers()),\n    fetchAllFollows: () => dispatch(fetchAllFollows()),\n    followUser: (userId) => dispatch(followUser(userId)),\n    unfollowUser: (userId) => dispatch(unfollowUser(userId)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GuildRecs)\n);\n"],"sourceRoot":""}